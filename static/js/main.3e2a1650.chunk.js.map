{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","console","log","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getAxios","one","a","axios","get","res","getMovie","lists","Promise","all","data","Genre","split","movieInfo","setState","this","movie","imdbID","Year","Title","Plot","Poster","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2RAqCeA,MAjCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAIjD,OAHAC,QAAQC,IAAIP,EAAIC,EAAMC,EAAOC,EAASC,GACtCE,QAAQC,IAAI,gBAAiBF,GAC7BC,QAAQC,IAAI,IAEV,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,sBAAKM,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BN,IAC9B,oBAAIM,UAAU,cAAd,SAA6BP,IAC7B,oBAAIO,UAAU,gBAAd,SACGH,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BL,EAAQW,MAAM,EAAG,KAAhD,gBC0EOC,G,kNAxFbC,MAAQ,CAAEC,WAAW,EAAMC,OAAQ,I,EACnCC,S,uCAAW,WAAOC,GAAP,eAAAC,EAAA,sEACSC,IAAMC,IAAN,oCACaH,EADb,qBADT,cACHI,EADG,yBAIFA,GAJE,2C,wDAMXC,S,sBAAW,8BAAAJ,EAAA,6DACHK,EAAQ,CACZ,wBACA,eACA,gBACA,eACA,mBACA,WACA,oBACA,aACA,aACA,KACA,cACA,YACA,gCACA,iBACA,UACA,eACA,gBACA,gBACA,oCACA,sBArBO,SAuBeC,QAAQC,IAC9BF,EAAMf,IAAN,uCAAU,WAAOS,GAAP,iBAAAC,EAAA,sEACeC,IAAMC,IAAN,oCACQH,EADR,+BADf,wBACAS,EADA,EACAA,MAGHC,MAAQD,EAAKC,MAAMC,MAAM,KAJtB,kBAKDF,GALC,2CAAV,wDAxBO,OAuBHG,EAvBG,OAgCT1B,QAAQC,IAAIyB,GACZ,EAAKC,SAAS,CAAEf,OAAQc,EAAWf,WAAW,IAjCrC,2C,uDAgDX,WACEiB,KAAKT,a,oBAGP,WACE,MAA8BS,KAAKlB,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAEnB,OADAZ,QAAQC,IAAI,gBAAiBW,EAAQD,GAEnC,yBAAST,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,4BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAACwB,GAAD,OACV,cAAC,EAAD,CAEEnC,GAAImC,EAAMC,OACVnC,KAAMkC,EAAME,KACZnC,MAAOiC,EAAMG,MACbnC,QAASgC,EAAMI,KACfnC,OAAQ+B,EAAMK,OACdnC,OAAQ8B,EAAML,OANTK,EAAMC,mB,GAzETK,IAAMC,YCFxBC,IAASC,OACL,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.3e2a1650.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  console.log(id, year, title, summary, poster);\n  console.log(\"MOvie genres:\", genres);\n  console.log(\"\");\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <ul className=\"movie__genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres__genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  plot: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import axios from \"axios\";\nimport React from \"react\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\nimport \"./Movie.css\";\n\nclass App extends React.Component {\n  state = { isLoading: true, movies: [] };\n  getAxios = async (one) => {\n    const res = await axios.get(\n      `http://www.omdbapi.com/?t=${one}&apikey=42979a8e`\n    );\n    return res;\n  };\n  getMovie = async () => {\n    const lists = [\n      \"It Happened One Night\",\n      \"Modern Times\",\n      \"Black Panther\",\n      \"Citizen Kane\",\n      \"The Wizard of Oz\",\n      \"Parasite\",\n      \"Avengers: Endgame\",\n      \"Casablanca\",\n      \"Knives Out\",\n      \"Us\",\n      \"Toy Story 4\",\n      \"Lady Bird\",\n      \"Mission: Impossible - Fallout\",\n      \"BlacKkKlansman\",\n      \"Get Out\",\n      \"The Irishman\",\n      \"The Godfather\",\n      \"All About Eve\",\n      \"Spider-Man: Into the Spider-Verse\",\n      \"Mad Max: Fury Road\",\n    ];\n    const movieInfo = await Promise.all(\n      lists.map(async (one) => {\n        const { data } = await axios.get(\n          `http://www.omdbapi.com/?t=${one}&plot=full&apikey=42979a8e`\n        );\n        data.Genre = data.Genre.split(\",\");\n        return data;\n      })\n    );\n    console.log(movieInfo);\n    this.setState({ movies: movieInfo, isLoading: false });\n  };\n\n  // getMovie = async () => {\n  //   const {\n  //     data: {\n  //       data: { movies },\n  //     },\n  //   } = await axios.get(\n  //     \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n  //   );\n\n  //   this.setState({ movies, isLoading: false });\n  // };\n\n  componentDidMount() {\n    this.getMovie();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    console.log(\"state movies:\", movies, isLoading);\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">\"Loading...\"</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.imdbID}\n                id={movie.imdbID}\n                year={movie.Year}\n                title={movie.Title}\n                summary={movie.Plot}\n                poster={movie.Poster}\n                genres={movie.Genre}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,  document.getElementById('root')\n);\n\n"],"sourceRoot":""}